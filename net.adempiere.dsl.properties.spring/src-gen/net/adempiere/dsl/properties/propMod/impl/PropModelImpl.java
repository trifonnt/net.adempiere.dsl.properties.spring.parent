/**
 * generated by Xtext 2.14.0
 */
package net.adempiere.dsl.properties.propMod.impl;

import java.util.Collection;

import net.adempiere.dsl.properties.propMod.Metadata;
import net.adempiere.dsl.properties.propMod.PropModPackage;
import net.adempiere.dsl.properties.propMod.PropModel;
import net.adempiere.dsl.properties.propMod.PropertyDefinition;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Prop Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link net.adempiere.dsl.properties.propMod.impl.PropModelImpl#getMetaData <em>Meta Data</em>}</li>
 *   <li>{@link net.adempiere.dsl.properties.propMod.impl.PropModelImpl#getProperties <em>Properties</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PropModelImpl extends MinimalEObjectImpl.Container implements PropModel
{
  /**
   * The cached value of the '{@link #getMetaData() <em>Meta Data</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetaData()
   * @generated
   * @ordered
   */
  protected Metadata metaData;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EList<PropertyDefinition> properties;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PropModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PropModPackage.Literals.PROP_MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Metadata getMetaData()
  {
    return metaData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMetaData(Metadata newMetaData, NotificationChain msgs)
  {
    Metadata oldMetaData = metaData;
    metaData = newMetaData;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PropModPackage.PROP_MODEL__META_DATA, oldMetaData, newMetaData);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMetaData(Metadata newMetaData)
  {
    if (newMetaData != metaData)
    {
      NotificationChain msgs = null;
      if (metaData != null)
        msgs = ((InternalEObject)metaData).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PropModPackage.PROP_MODEL__META_DATA, null, msgs);
      if (newMetaData != null)
        msgs = ((InternalEObject)newMetaData).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PropModPackage.PROP_MODEL__META_DATA, null, msgs);
      msgs = basicSetMetaData(newMetaData, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PropModPackage.PROP_MODEL__META_DATA, newMetaData, newMetaData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<PropertyDefinition> getProperties()
  {
    if (properties == null)
    {
      properties = new EObjectContainmentEList<PropertyDefinition>(PropertyDefinition.class, this, PropModPackage.PROP_MODEL__PROPERTIES);
    }
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PropModPackage.PROP_MODEL__META_DATA:
        return basicSetMetaData(null, msgs);
      case PropModPackage.PROP_MODEL__PROPERTIES:
        return ((InternalEList<?>)getProperties()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PropModPackage.PROP_MODEL__META_DATA:
        return getMetaData();
      case PropModPackage.PROP_MODEL__PROPERTIES:
        return getProperties();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PropModPackage.PROP_MODEL__META_DATA:
        setMetaData((Metadata)newValue);
        return;
      case PropModPackage.PROP_MODEL__PROPERTIES:
        getProperties().clear();
        getProperties().addAll((Collection<? extends PropertyDefinition>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PropModPackage.PROP_MODEL__META_DATA:
        setMetaData((Metadata)null);
        return;
      case PropModPackage.PROP_MODEL__PROPERTIES:
        getProperties().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PropModPackage.PROP_MODEL__META_DATA:
        return metaData != null;
      case PropModPackage.PROP_MODEL__PROPERTIES:
        return properties != null && !properties.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //PropModelImpl
